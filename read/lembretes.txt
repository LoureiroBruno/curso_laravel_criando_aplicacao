================================================================================================================================================================================
mod 01

# Aprendemos o que é e para que serve um framework
# Vimos diferentes formas de instalar o Laravel
# Criamos uma rota usando Laravel
# Vimos como o Laravel nos auxilia na investigação de erros

-----------------------------------------------------------------------------------------------------------------------------------
##  Com essa forma de instalação, vamos ter tudo na nossa máquina mesmo, vamos executar o servidor na nossa máquina, sem utilizar nenhum container do Docker, 
ou coisa do tipo, então para isso vamos executar esse comando aqui, # composer create-project laravel/laravel nome-do-projeto
##  a versão do Laravel no momento da gravação deste curso é a 9 para criar o projeto utilizando esta versão, 
basta informá-la # composer create-project --prefer-dist laravel/laravel laravel_criando_aplicacao "9.1.*" ou # composer create-project laravel/laravel teste ^9
## ao rodar # php artisan - retorno de uma lista de funcionalidades
## ao rodar # php artisan serve - startado o serviço equivalente ao # php -S localhaost:8000 -t public
## caso necessário especificar um endereço diferente do padrão e a porta rodar # artisan serve --host=[qualquer_valor_ip] --port=[qualquer_valor_porta]
## Dessa forma que estamos fazendo é subir um servidor web utilizando o servidor embutido do próprio PHP, só que aqui com algumas facilidades do Laravel, 
então ele já subiu para nós, já está nos redirecionando as requisições para o arquivo de configuração para o arquivo de Bootstrap do Laravel, 
então já está tudo configurado bonito, vamos lá, executar esse projeto

## quando acessa o arquivo web.php dentro a pasta routes, existe o arquivo de configuração das rotas do dominio.
tem as configurações de rota, então repara que é bastante simples configurarmos uma rota, eu utilizo a classe Route:: o verbo http que eu espero receber essa requisição,
no nosso caso aqui, como eu estou acessando direto do navegador, é get, se eu quisesse receber os dados de um formulário, seria post, se fosse uma API, eu posso utilizar todos os verbos http.

Route::get('/', function () {
    return view('welcome');
});

Qual a sintaxe para criar uma nova rota no Laravel?
## Route::verbo_http('{sua rota}', {Código_a_ser_executado});

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

================================================================================================================================================================================
mod 02

# Criamos nosso primeiro controller
# Aprendemos sobre nomes de ações no Laravel
# Entendemos como Laravel lida com requisição e resposta

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
## vamos lá começar a criar o nosso sistema de controle de séries e para isso o que eu quero fazer?
então eu quero por exemplo, cadastrar as séries que eu já assisti, então vamos lá, eu vou criar aqui uma rota.
primeiro vou fazer da forma manual, depois eu vou refazer de uma forma mais automatizada, então vamos lá, primeiro, eu vou vir aqui dentro de “app > Http > Controllers”, 
e vou criar uma nova classe, então essa classe vai chamar “SeriesController” ou dentro a pasta raiz do projeto # php artisan make:controller SeriesController

## ntão vou ter uma lista de séries, que vai ser um array por exemplo $series = [];, e aqui dentro vou ter o nome de várias séries, por exemplo, ’Punisher’, ‘Lost’, ‘Grey\’s Anatomy’, 
eu tenho aqui uma lista com 3 séries, e eu quero exibir esses seriados na tela, dentro de uma lista por exemplo, então eu vou ter aqui
 um HTML de resultado $html = ‘<ul>’;, esse HTML, vai ter uma lista, então eu vou simplesmente exibir esse HTML echo $html, então vamos lá, 
 vou fazer um foreach ($series as $serie) {}, e aqui esse HTML vai ter um item de lista, para cada uma das minhas séries eu vou ter “li”, $html .= “<li>$serie</li>”;, 
 e aqui no final eu posso fechar o meu “ul”, $html .= ‘</ul>’;. de forma icorreta, mas para iniciar o entendimento.


## Tenho um controller criado, não seguindo as melhores práticas, mas está criado, agora como eu faço para quando eu acessar essa URL, o controller ser executado? Então aqui o que eu preciso fazer? 
## retorna ao arquivo web dentro a pasta route adiconar a nova rota exemplificado.
Route::get('/series', [SeriesController::class, 'listarSeries']);

## pronto ao rodar # php artisan make:controller SeriesController, foi criado a classe controladora com o nome SeriesController, e extendendo da classe Controller.
estamos ganhando algumas funcionalidades, estamos fazendo com que o nosso controller seja um controller do Laravel em si, e ele possui diversas funcionalidades que vão ser interessante
no futuro, com o código que temos hoje, isso não é necessário, eu posso simplesmente apagar isso aqui, sem problema nenhum, que o nosso código continua funcionando,
mas vamos deixar porque no futuro vamos utilizar algumas funcionalidades dessa superclasse controller.

## E aqui se acessamos a documentação, de “Resource Controllers”, visto por exemplo em uma URL /photos utilizando o verbo get, no nosso caso verbo get URL /series, o nome da action,
ou seja, do método do nosso controller, tende a ser index, esse é o padrão, tendemos a utilizar o nome index.
Já utilizando o verbo get para /series/criar por exemplo, ou /series/create, utilizaríamos o método create, que vai ser o formulário de criar uma nova série e assim em diante, 
então esses aqui são os padrões para termos os nossos métodos, as nossas actions de um controller, então sempre que eu disser uma action, é um método de um controller.
Então para começarmos a se habituar com esse padrão, vamos utilizar esses nomes aqui, então lá, ao invés utilizar public function listarSeries(),
eu vou renomear para public function index(), então lá também na definição da rota, vamos utilizar index.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

================================================================================================================================================================================
mod 03

# 

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
##  

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

================================================================================================================================================================================
mod 04

# 

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
##  

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

================================================================================================================================================================================
mod 05

# 

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
##  

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
